{
  "Hide a specific model": {
    "prefix": "Hide Model",
    "body": [
      "for _, v in pairs(${1|vanilla_model,armor_model,elytra_model|}) do\n    v.setEnabled(false)\nend\n"
    ],
    "description": "For hiding a specific model."
  },
  "Trust Limit Warnings": {
    "prefix": "Warnings",
    "body": [
      "function tick()\n    if (meta.getCurrentTickCount() > 4096) then\n        log(\"WARNING: Tick instruction limit has been reached!\")\n    end\n    if (meta.getCurrentRenderCount() > 1024) then\n        log(\"WARNING: Render instruction limit has been reached!\")\n    end\n    if (meta.getCurrentComplexity() > 1152) then\n        log(\"WARNING: Complexity limit has been reached!\")\n    end\nend\n"
    ],
    "description": "Warnings in chat when trust settings limits are reached."
  },
  "math.sin(world.getTime())": {
    "prefix": "Sine Wave",
    "body": [
      "math.sin(world.getTime()*${1:speed})*${2:strength}"
    ],
    "description": "Sine wave with speed and strength."
  },
  "Using lerp to smooth": {
    "prefix": "Smooth Animation",
    "body": [
      "${1:pos} = 0\n_${1} = 0\n\nfunction tick()\n    _${1} = ${1}\n    ${1} = math.sin(world.getTime())\nend\n\nfunction render(delta)\n    model.${2:cube}.setPos({0,lerp(_${1},${1},delta),0})\nend\n"
    ],
    "description": "Generates base structure for using lerp to smooth out movements."
  },
  "Lerp function": {
    "prefix": "Lerp",
    "body": [
      "function lerp(a, b, x)\n    return a + (b - a) * x\nend\n"
    ],
    "description": "Lerp function."
  },
  "Clamp Function": {
    "prefix": "Clamp",
    "body": [
      "function clamp(value,low,high)\n    return math.min(math.max(value, low), high)\nend\n"
    ],
    "description": "Clamp function."
  },
  "Execute every X ticks": {
    "prefix": "Timer",
    "body": [
      "if world.getTime() % ${1:20} == 0 then\n    ${0}\nend"
    ],
    "description": "Execute every X ticks. Default is 20 ticks (1 second)"
  },
  "Tick function": {
    "prefix": "tick()",
    "body": [
      "function tick()\n    ${0}\nend"
    ],
    "description": "Inserts the tick function."
  },
  "Render function": {
    "prefix": "render()",
    "body": [
      "function render(delta)\n    ${0}\nend"
    ],
    "description": "Inserts the render function."
  },
  "World Render function": {
    "prefix": "world_render()",
    "body": [
      "function world_render(delta)\n    ${0}\nend"
    ],
    "description": "Inserts the world_render function."
  },
  "Player Init function": {
    "prefix": "player_init()",
    "body": [
      "function player_init()\n    ${0}\nend"
    ],
    "description": "Inserts the player_init function."
  }
}